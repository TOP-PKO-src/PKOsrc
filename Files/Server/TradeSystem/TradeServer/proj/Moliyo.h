#pragma once 

#using <System.dll>
#using <System.Xml.dll>
#using <System.Web.Services.dll>
#using <mscorlib.dll>

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
namespace Moliyo {
    using namespace System::Diagnostics;
    using namespace System::Xml::Serialization;
    using namespace System;
    using namespace System::Web::Services::Protocols;
    using namespace System::ComponentModel;
    using namespace System::Web::Services;
    
    using namespace System;
    public __gc class RDBilling;
    public __gc class AuthHeader;
    
    
    /// <remarks/>
    [System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(S"code"), 
    System::Web::Services::WebServiceBindingAttribute(Name=S"RDBillingSoap", Namespace=S"http://tempuri.org/")]
    public __gc class RDBilling : public System::Web::Services::Protocols::SoapHttpClientProtocol {
        
        public: Moliyo::AuthHeader *  AuthHeaderValue;
        
        /// <remarks/>
        public: RDBilling();
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapHeaderAttribute(S"AuthHeaderValue")]
        [System::Web::Services::Protocols::SoapDocumentMethodAttribute(S"http://tempuri.org/PSS_GetMemberBill", RequestNamespace=S"http://tempuri.org/", ResponseNamespace=S"http://tempuri.org/", Use=System::Web::Services::Description::SoapBindingUse::Literal, ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 PSS_GetMemberBill(System::String *  UserName);
        
        /// <remarks/>
        public: System::IAsyncResult *  BeginPSS_GetMemberBill(System::String *  UserName, System::AsyncCallback *  callback, System::Object *  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndPSS_GetMemberBill(System::IAsyncResult *  asyncResult);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapHeaderAttribute(S"AuthHeaderValue")]
        [System::Web::Services::Protocols::SoapDocumentMethodAttribute(S"http://tempuri.org/PSS_RDMemberTDRIns", RequestNamespace=S"http://tempuri.org/", ResponseNamespace=S"http://tempuri.org/", Use=System::Web::Services::Description::SoapBindingUse::Literal, ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 PSS_RDMemberTDRIns(System::String *  MemberPK, System::String *  TranID, System::Int32 Credit, System::String *  RecTime, System::String *  Memo, System::Int32 Type, System::Int32 TypeSub);
        
        /// <remarks/>
        public: System::IAsyncResult *  BeginPSS_RDMemberTDRIns(System::String *  MemberPK, System::String *  TranID, System::Int32 Credit, System::String *  RecTime, System::String *  Memo, System::Int32 Type, System::Int32 TypeSub, System::AsyncCallback *  callback, System::Object *  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndPSS_RDMemberTDRIns(System::IAsyncResult *  asyncResult);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapHeaderAttribute(S"AuthHeaderValue")]
        [System::Web::Services::Protocols::SoapDocumentMethodAttribute(S"http://tempuri.org/CheckTrade", RequestNamespace=S"http://tempuri.org/", ResponseNamespace=S"http://tempuri.org/", Use=System::Web::Services::Description::SoapBindingUse::Literal, ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 CheckTrade(System::String *  UserName, System::String *  TranFrom, System::String *  TranID);
        
        /// <remarks/>
        public: System::IAsyncResult *  BeginCheckTrade(System::String *  UserName, System::String *  TranFrom, System::String *  TranID, System::AsyncCallback *  callback, System::Object *  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndCheckTrade(System::IAsyncResult *  asyncResult);
    };
    
    /// <remarks/>
    [System::Xml::Serialization::XmlTypeAttribute(Namespace=S"http://tempuri.org/"), 
    System::Xml::Serialization::XmlRootAttribute(Namespace=S"http://tempuri.org/", IsNullable=false)]
    public __gc class AuthHeader : public System::Web::Services::Protocols::SoapHeader {
        
        /// <remarks/>
        public: System::String *  UserName;
        
        /// <remarks/>
        public: System::String *  PassWord;
        
        /// <remarks/>
        public: [System::Xml::Serialization::XmlAnyAttributeAttribute]
        System::Xml::XmlAttribute *  AnyAttr[];
    };
    
    /// <remarks/>
    
    
    /// <remarks/>
    inline RDBilling::RDBilling() {
        this->Url = S"http://billingrd.moliyo.com/RDBilling.asmx";
    }
    
    /// <remarks/>
    inline System::Int32 RDBilling::PSS_GetMemberBill(System::String *  UserName) {
        System::Object* __mcTemp__1[] = new System::Object*[1];
                __mcTemp__1[0] = UserName;
        System::Object *  results[] = this->Invoke(S"PSS_GetMemberBill", __mcTemp__1);
        return (*__try_cast<__box System::Int32 *  >(results[0]));
    };
    
    /// <remarks/>
    inline System::IAsyncResult *  RDBilling::BeginPSS_GetMemberBill(System::String *  UserName, System::AsyncCallback *  callback, System::Object *  asyncState) {
        System::Object* __mcTemp__1[] = new System::Object*[1];
                __mcTemp__1[0] = UserName;
        return this->BeginInvoke(S"PSS_GetMemberBill", __mcTemp__1, callback, asyncState);
    };
    
    /// <remarks/>
    inline System::Int32 RDBilling::EndPSS_GetMemberBill(System::IAsyncResult *  asyncResult) {
        System::Object *  results[] = this->EndInvoke(asyncResult);
        return (*__try_cast<__box System::Int32 *  >(results[0]));
    };
    
    /// <remarks/>
    inline System::Int32 RDBilling::PSS_RDMemberTDRIns(System::String *  MemberPK, System::String *  TranID, System::Int32 Credit, System::String *  RecTime, System::String *  Memo, System::Int32 Type, System::Int32 TypeSub) {
        System::Object* __mcTemp__1[] = new System::Object*[7];
                __mcTemp__1[0] = MemberPK;
                __mcTemp__1[1] = TranID;
                __mcTemp__1[2] = __box(Credit);
                __mcTemp__1[3] = RecTime;
                __mcTemp__1[4] = Memo;
                __mcTemp__1[5] = __box(Type);
                __mcTemp__1[6] = __box(TypeSub);
        System::Object *  results[] = this->Invoke(S"PSS_RDMemberTDRIns", __mcTemp__1);
        return (*__try_cast<__box System::Int32 *  >(results[0]));
    };
    
    /// <remarks/>
    inline System::IAsyncResult *  RDBilling::BeginPSS_RDMemberTDRIns(System::String *  MemberPK, System::String *  TranID, System::Int32 Credit, System::String *  RecTime, System::String *  Memo, System::Int32 Type, System::Int32 TypeSub, System::AsyncCallback *  callback, System::Object *  asyncState) {
        System::Object* __mcTemp__1[] = new System::Object*[7];
                __mcTemp__1[0] = MemberPK;
                __mcTemp__1[1] = TranID;
                __mcTemp__1[2] = __box(Credit);
                __mcTemp__1[3] = RecTime;
                __mcTemp__1[4] = Memo;
                __mcTemp__1[5] = __box(Type);
                __mcTemp__1[6] = __box(TypeSub);
        return this->BeginInvoke(S"PSS_RDMemberTDRIns", __mcTemp__1, callback, asyncState);
    };
    
    /// <remarks/>
    inline System::Int32 RDBilling::EndPSS_RDMemberTDRIns(System::IAsyncResult *  asyncResult) {
        System::Object *  results[] = this->EndInvoke(asyncResult);
        return (*__try_cast<__box System::Int32 *  >(results[0]));
    };
    
    /// <remarks/>
    inline System::Int32 RDBilling::CheckTrade(System::String *  UserName, System::String *  TranFrom, System::String *  TranID) {
        System::Object* __mcTemp__1[] = new System::Object*[3];
                __mcTemp__1[0] = UserName;
                __mcTemp__1[1] = TranFrom;
                __mcTemp__1[2] = TranID;
        System::Object *  results[] = this->Invoke(S"CheckTrade", __mcTemp__1);
        return (*__try_cast<__box System::Int32 *  >(results[0]));
    };
    
    /// <remarks/>
    inline System::IAsyncResult *  RDBilling::BeginCheckTrade(System::String *  UserName, System::String *  TranFrom, System::String *  TranID, System::AsyncCallback *  callback, System::Object *  asyncState) {
        System::Object* __mcTemp__1[] = new System::Object*[3];
                __mcTemp__1[0] = UserName;
                __mcTemp__1[1] = TranFrom;
                __mcTemp__1[2] = TranID;
        return this->BeginInvoke(S"CheckTrade", __mcTemp__1, callback, asyncState);
    };
    
    /// <remarks/>
    inline System::Int32 RDBilling::EndCheckTrade(System::IAsyncResult *  asyncResult) {
        System::Object *  results[] = this->EndInvoke(asyncResult);
        return (*__try_cast<__box System::Int32 *  >(results[0]));
    };
    
    /// <remarks/>
    
    /// <remarks/>
    
    /// <remarks/>
    
    /// <remarks/>
}
